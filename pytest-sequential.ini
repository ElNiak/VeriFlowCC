# Sequential execution configuration for V-Model workflow integration tests
# This configuration ensures tests that require sequential execution run properly

[tool:pytest]
# Test discovery
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Directories
testpaths = tests/integration
norecursedirs = .git .tox dist build *.egg __pycache__ .venv venv .cache

# Minimum version
minversion = 7.0

# Add current directory to Python path
pythonpath = .

# Strict mode
strict_markers = true
strict_config = true

# Sequential execution options - NO PARALLEL EXECUTION
addopts =
    # Verbose output for detailed handoff tracking
    -v
    --tb=long
    --strict-markers

    # NO parallel execution for sequential tests
    # Remove -n auto to force sequential execution

    # Async support
    --asyncio-mode=auto

    # Show all test durations for handoff timing analysis
    --durations=0

    # Keep going on failures to see all handoff patterns
    --continue-on-collection-errors

    # Color output
    --color=yes
    --show-capture=all

    # Capture logs for handoff analysis
    --log-cli-level=DEBUG
    --log-cli-format=%(asctime)s [%(levelname)8s] [%(name)s] %(message)s
    --log-cli-date-format=%Y-%m-%d %H:%M:%S

    # JUnit output for CI integration
    --junitxml=test-results/sequential-junit.xml

    # JSON report for handoff analysis
    --json-report
    --json-report-file=test-results/sequential-report.json

    # Only run tests marked as sequential
    -m sequential

# Extended timeout for real SDK calls
timeout = 1800  # 30 minutes total timeout for sequential execution

# Markers for sequential testing
markers =
    # V-Model specific markers
    requirements: Requirements analysis tests
    design: Design and architecture tests
    coding: Implementation tests
    testing: Testing and QA tests
    integration: Integration validation tests

    # Test type markers
    unit: Unit tests
    integration: Integration tests
    e2e: End-to-end tests
    slow: Slow tests
    sequential: Tests requiring sequential execution

    # SDK markers
    real_sdk: Tests using real Claude Code SDK
    requires_api_key: Tests requiring API keys

    # Priority markers
    critical: Critical path tests

# Coverage for sequential tests (optional)
[coverage:run]
source = verifflowcc
branch = True
omit =
    */tests/*
    */test_*.py
    */__pycache__/*

# Logging for sequential test analysis
[tool:pytest:logging]
log_cli = true
log_cli_level = DEBUG
log_cli_format = %(asctime)s [%(levelname)8s] [%(name)s] %(filename)s:%(lineno)d - %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# File logging for handoff analysis
log_file = test-results/sequential-test.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] [%(name)s] %(filename)s:%(lineno)d - %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Async configuration
[tool:pytest:asyncio]
asyncio_mode = auto
